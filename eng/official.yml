# dotnet.project-system-tools
# Official pipeline
# URL: https://devdiv.visualstudio.com/DevDiv/_build?definitionId=15888
variables:
  # Allows CodeQL to run on our Build job.
  # https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/codeql/configuring-codeql3000-ado-pipelines
  Codeql.Enabled: true
  BuildConfiguration: Release
  TeamName: DotNet-Project-System
  TeamEmail: dotnetdevexproj@microsoft.com
  SignType: real

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release

extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    sdl:
      sourceAnalysisPool: VSEngSS-MicroBuild2022-1ES
      binskim:
        enabled: true
      credscan:
        enabled: true
      policheck:
        enabled: true
      sbom:
        enabled: false
    pool:
      name: VSEngSS-MicroBuild2022-1ES
    stages:
    - stage: Build
      displayName: Build
      variables:
        # https://devdiv.visualstudio.com/DevDiv/_library?itemType=VariableGroups&view=VariableGroupView&variableGroupId=434&path=DotNet-Project-System
        # Variables used:
        # - ApiScanConnectionString
        - group: DotNet-Project-System
      jobs:
      - job: Build
        templateContext:
          mb:
            signing:
              enabled: true
              signType: $(SignType)
            swix:
              enabled: true
          outputParentDirectory: $(Build.SourcesDirectory)/artifacts
          outputs:
          - output: pipelineArtifact
            displayName: Publish Build Artifacts
            targetPath: $(Build.SourcesDirectory)/artifacts/
            artifactName: $(Build.BuildNumber)
            condition: succeededOrFailed()

        steps:
        - task: BatchScript@1
          displayName: Run CIBuild.cmd
          inputs:
            filename: eng\common\CIBuild.cmd
            arguments: -configuration $(BuildConfiguration) /p:OfficialBuildId=$(BUILD.BUILDNUMBER) /p:DotNetSignType=$(SignType) /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat) /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)
            failOnStandardError: true
        - template: common\templates\steps\generate-sbom.yml
        - task: CopyFiles@2
          displayName: Copy DLLs for Compliance checks
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)\artifacts\bin'
            Contents: |
              Microsoft.VisualStudio.ProjectSystem.Tools\**\Microsoft.VisualStudio.ProjectSystem.Tools*.dll
              Microsoft.VisualStudio.ProjectSystem.Tools\**\Microsoft.VisualStudio.ProjectSystem.Tools*.pdb
            TargetFolder: '$(Build.SourcesDirectory)\artifacts\DLLs'
          continueOnError: true
        - template: /build/analyze-compliance.yml@self
          parameters:
            SoftwareVersion: '17.0'
        - task: PublishSymbols@2
          displayName: Create Symbol Index
          inputs:
            SymbolsFolder: $(Build.SourcesDirectory)\artifacts\DLLs
            SearchPattern: |
              **/Microsoft.VisualStudio.ProjectSystem.Tools.dll
              **/Microsoft.VisualStudio.ProjectSystem.Tools.pdb
              **/Microsoft.VisualStudio.ProjectSystem.Tools.resources.dll
            # NOTE: This produces a warning about indexing (if enabled) but will still publish the symbols. See: https://github.com/microsoft/azure-pipelines-tasks/issues/15605
            IndexSources: false
            PublishSymbols: true
            SymbolServerType: TeamServices
          continueOnError: True
